misc:
  tests:
    ENCODER0: [10, 20, 100]
    ENCODER1: [12, 20, 200]
    SUB_GROUP:
      MLP0: [100, 20, 200]
      MLP1: [200, 20, 200]
      CONCAT: [400, 400]
      MLP2: [400, 20, 100]
    SUB_GROUP_2:
      MLP0: [100, 20, 200]
      MLP1: [200, 20, 200]
      CONCAT: [400, 400]
      MLP2: [400, 20, 100]
    GCN0: [100, 5]

model:
  inputs:
    - name: feature0
      members:
        - name: feature0
          n_last_dim: 10

    - name: feature1
      members:
        - name: feature1
          n_last_dim: 12

  fields:
    - name: support1
      is_time_series: false

  network:
    nn_type: GROUP
    name: CYCLE_MODEL
    inputs:
      - name: feature0
        n_last_dim: 10
      - name: feature1
        n_last_dim: 12
    
    outputs:
      - name: out_feature0
        n_last_dim: 5
    
    modules:
      - nn_type: MLP
        name: ENCODER0
        input_keys:
          - feature0
        output_key: mlp0
        destinations:
          - SUB_GROUP
        nn_parameters:
          nodes: [-1, 20, 100]
          activations: ["relu", "relu"]

      - nn_type: MLP
        name: ENCODER1
        input_keys:
          - feature1
        output_key: mlp1
        destinations:
          - SUB_GROUP
          - SUB_GROUP_2
        nn_parameters:
          nodes: [-1, 20, 200]
          activations: ["relu", "relu"]

      - nn_type: GROUP
        name: SUB_GROUP
        inputs:
          - name: mlp0
            n_last_dim: 100
          - name: mlp1
            n_last_dim: 200
        outputs:
          - name: mlp0
            n_last_dim: 100
        destinations:
          - SUB_GROUP_2
        modules:
          - nn_type: MLP
            name: MLP0
            input_keys:
              - mlp0
            output_key: mlp0
            destinations:
              - CONCAT
            nn_parameters:
              nodes: [-1, 20, 200]
              activations: ["relu", "relu"]

          - nn_type: MLP
            name: MLP1
            input_keys:
              - mlp1
            output_key: mlp1
            destinations:
              - CONCAT
            nn_parameters:
              nodes: [-1, 20, 200]
              activations: ["relu", "relu"]

          - nn_type: Concatenator
            name: CONCAT
            input_keys:
              - mlp0
              - mlp1
            destinations:
              - MLP2

          - nn_type: MLP
            name: MLP2
            output_key: mlp0
            nn_parameters:
              nodes: [-1, 20, 100]
              activations: ["relu", "relu"]

      - nn_type: GROUP
        name: SUB_GROUP_2
        inputs:
          - name: mlp0
            n_last_dim: 100
          - name: mlp1
            n_last_dim: 200
        outputs:
          - name: mlp0
            n_last_dim: 100
        destinations:
          - GCN0
        modules_same_as: SUB_GROUP
        # This is valid because modules_same_as is used
        modules:
          - nn_type: MLP
            name: MLP0
            input_keys:
              - mlp0
            output_key: mlp0
            destinations:
              - CONCAT
            nn_parameters:
              nodes: [-1, 20, 200]
              activations: ["relu", "relu"]

          - nn_type: MLP
            name: MLP1
            input_keys:
              - mlp1
            output_key: mlp1
            destinations:
              - CONCAT
            nn_parameters:
              nodes: [-1, 20, 200]
              activations: ["relu", "relu"]

          - nn_type: Concatenator
            name: CONCAT
            input_keys:
              - mlp0
              - mlp1
            destinations:
              - MLP2

          - nn_type: MLP
            name: MLP2
            output_key: mlp0
            nn_parameters:
              nodes: [-1, 20, 100]
              activations: ["relu", "relu"]

      - nn_type: GCN
        name: GCN0
        input_keys:
          - mlp0
        output_key: out_feature0
        nn_parameters:
          nodes: [-1, 5]
          activations: ["identity"]
          support_name: support1
