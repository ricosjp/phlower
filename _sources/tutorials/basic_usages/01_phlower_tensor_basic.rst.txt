
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorials/basic_usages/01_phlower_tensor_basic.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_tutorials_basic_usages_01_phlower_tensor_basic.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_basic_usages_01_phlower_tensor_basic.py:


.. _first:

phlower is a deep learning framework based on PyTorch Ignite especially for physical phenomenon such as fluid dynamics.


Phlower Tensor Operation with physical dimension
----------------------------------------------------

Usually, physics values have physics dimensions. Phlower can consider it.

.. GENERATED FROM PYTHON SOURCE LINES 15-20

Let's check what kind of items are treated as physics dimension
There are many possible choices of base physical dimensions.
Following to the SI standard, physical dimensions and corresponding dimension symbols are shown blelow.

time (T), length (L), mass (M), electric current (I), absolute temperature (Î˜), amount of substance (N) and luminous intensity (J).

.. GENERATED FROM PYTHON SOURCE LINES 20-25

.. code-block:: Python

    from phlower.utils.enums import PhysicalDimensionSymbolType

    print(f"{[str(v) for v in PhysicalDimensionSymbolType]}")






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ['T (time)', 'L (length)', 'M (mass)', 'I (electric current)', 'Theta (thermodynamic temperature)', 'N (amount of substance)', 'J (luminous intensity)']




.. GENERATED FROM PYTHON SOURCE LINES 26-29

Create PhlowerTensor which is tensor object with physical dimension.
There are several way to create PhlowerTensor, the most simple way is shown.
PhlowerTensor is a wrapper of torch.Tensor. Call `print` to check values and dimensions.

.. GENERATED FROM PYTHON SOURCE LINES 29-41

.. code-block:: Python


    import torch

    from phlower import phlower_tensor

    sample_velocity = torch.rand(3, 4)
    dimension = {"L": 1, "T": -1}
    physical_tensor = phlower_tensor(sample_velocity, dimension=dimension)

    print(physical_tensor)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    PhlowerTensor(tensor([[0.1821, 0.1916, 0.0233, 0.9045],
            [0.2592, 0.9320, 0.5812, 0.7066],
            [0.6506, 0.2953, 0.3910, 0.4612]]), Dimension: PhlowerDimensionTensor(T: -1, L: 1, M: 0, I: 0, Theta: 0, N: 0, J: 0)), is_time_series: False, is_voxel: False




.. GENERATED FROM PYTHON SOURCE LINES 42-44

Let's calculate square of velocity.
You can find that physical dimension is also converted to new dimension.

.. GENERATED FROM PYTHON SOURCE LINES 44-49

.. code-block:: Python


    square_velocity = torch.pow(physical_tensor, 2)
    print(square_velocity)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    PhlowerTensor(tensor([[3.3161e-02, 3.6725e-02, 5.4233e-04, 8.1809e-01],
            [6.7168e-02, 8.6869e-01, 3.3778e-01, 4.9925e-01],
            [4.2323e-01, 8.7187e-02, 1.5286e-01, 2.1270e-01]]), Dimension: PhlowerDimensionTensor(T: -2, L: 2, M: 0, I: 0, Theta: 0, N: 0, J: 0)), is_time_series: False, is_voxel: False




.. GENERATED FROM PYTHON SOURCE LINES 50-52

Create PhlowerTensor without physical dimension if you do not pass information of dimension to phlower_tensor.
Raise error when it comes to calculate PhlowerTensor with a physical dimension and that without it.

.. GENERATED FROM PYTHON SOURCE LINES 52-63

.. code-block:: Python


    try:
        one_physical_tensor = phlower_tensor(
            torch.rand(3, 4), dimension={"L": 1, "T": -1}
        )
        another_physical_tensor = phlower_tensor(torch.rand(3, 4))
        _ = another_physical_tensor + one_physical_tensor
    except Exception as ex:
        print(ex)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Cannot calcualte PhlowerTensor with physics dimension and PhlowerTensor without it. PhlowerTensor(tensor([[0.2020, 0.3561, 0.8378, 0.3673],
            [0.8835, 0.5230, 0.9315, 0.1635],
            [0.7923, 0.1074, 0.9537, 0.0458]]), Dimension: None), is_time_series: False, is_voxel: False




.. GENERATED FROM PYTHON SOURCE LINES 64-65

Some calculation operations are not allowed when physics dimension value is not the same,

.. GENERATED FROM PYTHON SOURCE LINES 65-78

.. code-block:: Python


    try:
        one_physical_tensor = phlower_tensor(
            torch.rand(3, 4), dimension={"L": 1, "T": -1}
        )
        another_physical_tensor = phlower_tensor(
            torch.rand(3, 4), dimension={"L": 1}
        )
        _ = another_physical_tensor + one_physical_tensor
    except Exception as ex:
        print(ex)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Add operation for different physical dimensions is not allowed.




.. GENERATED FROM PYTHON SOURCE LINES 79-80

Some calculation operations are allowed even when physics dimension value is not the same,

.. GENERATED FROM PYTHON SOURCE LINES 80-88

.. code-block:: Python


    one_physical_tensor = phlower_tensor(
        torch.rand(3, 4), dimension={"L": 1, "T": -1}
    )
    another_physical_tensor = phlower_tensor(
        torch.rand(3, 4), dimension={"Theta": 1}
    )
    print(another_physical_tensor * one_physical_tensor)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    PhlowerTensor(tensor([[0.1810, 0.4517, 0.6427, 0.1280],
            [0.0620, 0.0988, 0.2691, 0.4453],
            [0.4109, 0.2815, 0.0943, 0.0463]]), Dimension: PhlowerDimensionTensor(T: -1, L: 1, M: 0, I: 0, Theta: 1, N: 0, J: 0)), is_time_series: False, is_voxel: False





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.017 seconds)


.. _sphx_glr_download_tutorials_basic_usages_01_phlower_tensor_basic.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 01_phlower_tensor_basic.ipynb <01_phlower_tensor_basic.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 01_phlower_tensor_basic.py <01_phlower_tensor_basic.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: 01_phlower_tensor_basic.zip <01_phlower_tensor_basic.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
