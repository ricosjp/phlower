variables:
  PHLOWER_VERSION: 0.2.2-dev2
  PHLOWER_IMAGE_REGISTRY: registry.ritc.jp/ricos/machine_learning/phlower

stages:
  - test
  - document_test
  - deploy

default:
  image: ${PHLOWER_IMAGE_REGISTRY}:${PHLOWER_VERSION}-py312-cpu
  before_script:
    - source /workspace/.venv/bin/activate
    - poetry run python3 -m pip install -e .

lint:
  stage: test
  script:
    - make lint
  tags:
    - no-gpu
  dependencies: []

pytest_with_py312:
  stage: test
  script:
    - make test
    - poetry run python3 -m coverage html -d coverage
    - poetry run python3 -m coverage xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    expose_as: coverage
    paths:
      - coverage/
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  tags:
    - no-gpu
    - GenuineIntel
  dependencies: []


pytest_with_py311:
  stage: test
  image: ${PHLOWER_IMAGE_REGISTRY}:${PHLOWER_VERSION}-py311-cpu
  script:
    - make test
  dependencies: []

pytest_with_py310:
  stage: test
  image: ${PHLOWER_IMAGE_REGISTRY}:${PHLOWER_VERSION}-py310-cpu
  script:
    - make test
  dependencies: []

gpu_test:
  image: ${PHLOWER_IMAGE_REGISTRY}:${PHLOWER_VERSION}-py311-cu124
  stage: test
  script:
    - make gpu_test
  tags:
    - gpu

e2e_test:
  image: ${PHLOWER_IMAGE_REGISTRY}:${PHLOWER_VERSION}-py311-cu124
  stage: test
  variables:
    NCCL_DEBUG: "INFO"
  script:
    - make e2e_test
  tags:
    - multi-gpu
    - GenuineIntel

examples:
  image: ${PHLOWER_IMAGE_REGISTRY}:${PHLOWER_VERSION}-py311-cu124
  stage: test
  script:
    - make examples
  tags:
    - gpu
    - GenuineIntel

pages_test:
  stage: document_test
  script:
    - make document
  tags:
    - no-gpu
    - GenuineIntel
  artifacts:
    paths:
      - docs/build/html/

pages:
  stage: deploy
  script:
    - mkdir public
    - cp -r docs/build/html/* public/
  artifacts:
    paths:
      - public
  dependencies:
    - pages_test
  only:
    - main
    - develop
    - fix_sphinx

.deploy:wheel:
  stage: deploy
  script:
    - poetry version $VERSION
    - poetry config repositories.ricos https://pypi.ritc.jp
    - poetry build -f wheel
    - poetry publish --username ricos --password $RICOS_PYPI_KEY -r ricos --no-ansi -n -v
    - poetry publish --username __token__ --password $PYPI_PUBLISH_TOKEN --no-ansi -n -v


deploy:wheel:tags:
  image: python:3.11-slim
  extends: .deploy:wheel
  before_script:
    - pip install poetry
    - export VERSION=$CI_COMMIT_REF_NAME
  only:
    - tags

# docker:
#   stage: deploy
#   services:
#     - docker:dind
#   script:
#     - make push
#   only:
#     - main

